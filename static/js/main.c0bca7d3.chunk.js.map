{"version":3,"sources":["dataProvider.js","supabase.js","i18n.js","components/recipeViews/recipeShowTitle.jsx","components/stars.jsx","constants/stars.js","components/recipeViews/recipeShowHeader.jsx","components/recipeViews/recipeShowRichText.jsx","components/starRow.jsx","components/recipes.jsx","components/categories.jsx","supabaseAuthProvider.js","App.jsx","serviceWorker.js","index.js"],"names":["client","resources","supabase","createClient","getList","a","resource","resourceOptions","params","pagination","sort","filter","q","rangeFrom","page","perPage","rangeTo","query","from","table","select","fields","join","count","order","field","ascending","match","range","fullTextSearchFields","Array","isArray","filters","includes","split","queryString","forEach","index","array","length","or","data","error","primaryKey","map","item","id","total","getResourceOptions","options","dataProvider","categories","recipes","getOne","single","getMany","ids","in","getManyReference","originalParams","target","create","insert","record","update","updateMany","records","delete","deleteMany","danishMessages","ra","navigation","page_rows_per_page","skip_nav","auth","user_menu","danishMsgs","useStyles","makeStyles","text","fontWeight","alignContent","fontSize","root","RecipeShowTitle","props","classes","className","title","Stars","rating","this","whiteStars","blackStars","Number","_x","PureComponent","float","width","paddingBlock","RecipeShowHeader","translate","useTranslate","servings","duration_free","label","display","marginBottom","RecipeShowRichText","source","getLabel","RichTextField","StarRow","PostTitle","validateRating","number","minValue","maxValue","RecipeFilter","searchLabel","Filter","TextInput","alwaysOn","ReferenceInput","reference","allowEmpty","SelectInput","optionText","PostPagination","Pagination","rowsPerPageOptions","RecipeList","List","bulkActionButtons","Datagrid","rowClick","TextField","NumberField","ReferenceField","RecipeShow","Show","SimpleShowLayout","toolbarOptions","list","indent","direction","size","color","background","font","align","RecipeForm","SimpleForm","NumberInput","validate","toolbar","RecipeEdit","Edit","RecipeCreate","Create","CategoryCreate","CategoryList","CategoryEdit","CategoryShow","DateField","authProvider","supabaseAuthProvider","getIdentity","fullName","messages","name","category_id","ingredients","directions","season","created_at","updated_at","myroot","search","i18nProvider","polyglotI18nProvider","App","Admin","customRoutes","authRoutes","loginPage","LoginPage","Resource","show","edit","icon","MenuBookIcon","CategoryIcon","Component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c0bca7d3.chunk.js","sourcesContent":["import { supabase } from './supabase'\n\n// This is copied from ra-supabase but with changes to the getList functionality\n// First off it supports multi column search where the search term only has to be\n// Present in one of the columns, not all of them.\n// It also supports searching for multiple terms at a time, by comma separating them\nexport const supabaseDataProvider = (client, resources) => ({\n  getList: async (resource, params) => {\n    const resourceOptions = getResourceOptions(resource, resources)\n    return getList({ client, resource, resourceOptions, params })\n  },\n  getOne: async (resource, { id }) => {\n    const resourceOptions = getResourceOptions(resource, resources)\n\n    const { data, error } = await client\n      .from(resourceOptions.table)\n      .select(resourceOptions.fields.join(', '))\n      .match({ id })\n      .single()\n\n    if (error) {\n      throw error\n    }\n\n    if (resourceOptions.primaryKey === 'id') {\n      return { data }\n    }\n\n    return { ...data, id: data[resourceOptions.primaryKey] }\n  },\n  getMany: async (resource, { ids }) => {\n    const resourceOptions = getResourceOptions(resource, resources)\n\n    const { data, error } = await client\n      .from(resourceOptions.table)\n      .select(resourceOptions.fields.join(', '))\n      .in('id', ids)\n\n    if (error) {\n      throw error\n    }\n    return { data: data ?? [] }\n  },\n  getManyReference: async (resource, originalParams) => {\n    const resourceOptions = getResourceOptions(resource, resources)\n    const { target, id } = originalParams\n    const params = {\n      ...originalParams,\n      filter: { ...originalParams.filter, [target]: id },\n    }\n    return getList({ client, resource, resourceOptions, params })\n  },\n  create: async (resource, { data }) => {\n    const resourceOptions = getResourceOptions(resource, resources)\n    const { data: record, error } = await client.from(resourceOptions.table).insert(data).single()\n\n    if (error) {\n      throw error\n    }\n\n    if (resourceOptions.primaryKey === 'id') {\n      return { data: record }\n    }\n\n    return { ...record, id: record[resourceOptions.primaryKey] }\n  },\n  update: async (resource, { id, data }) => {\n    const resourceOptions = getResourceOptions(resource, resources)\n    const { data: record, error } = await client.from(resourceOptions.table).update(data).match({ id }).single()\n\n    if (error) {\n      throw error\n    }\n\n    if (resourceOptions.primaryKey === 'id') {\n      return { data: record }\n    }\n\n    return { ...record, id: record[resourceOptions.primaryKey] }\n  },\n  updateMany: async (resource, { ids, data }) => {\n    const resourceOptions = getResourceOptions(resource, resources)\n    const { data: records, error } = await client.from(resourceOptions.table).update(data).in('id', ids)\n\n    if (error) {\n      throw error\n    }\n    return {\n      data: records?.map((record) => record[resourceOptions.primaryKey]),\n    }\n  },\n  delete: async (resource, { id }) => {\n    const resourceOptions = getResourceOptions(resource, resources)\n    const { data: record, error } = await client.from(resourceOptions.table).delete().match({ id }).single()\n\n    if (error) {\n      throw error\n    }\n\n    if (resourceOptions.primaryKey === 'id') {\n      return { data: record }\n    }\n\n    return { ...record, id: record[resourceOptions.primaryKey] }\n  },\n  deleteMany: async (resource, { ids }) => {\n    const resourceOptions = getResourceOptions(resource, resources)\n    const { data: records, error } = await client.from(resourceOptions.table).delete().in('id', ids)\n\n    if (error) {\n      throw error\n    }\n    return {\n      data: records?.map((record) => record[resourceOptions.primaryKey]),\n    }\n  },\n})\n\nconst getList = async (\n  { client, resource, resourceOptions, params } = {\n    client,\n    resource,\n    resourceOptions,\n    params,\n  }\n) => {\n  const {\n    pagination,\n    sort,\n    filter: { q, ...filter },\n  } = params\n\n  const rangeFrom = (pagination.page - 1) * pagination.perPage\n  const rangeTo = rangeFrom + pagination.perPage\n\n  let query = client\n    .from(resourceOptions.table)\n    .select(resourceOptions.fields.join(', '), { count: 'exact' })\n    .order(sort.field, { ascending: sort.order === 'ASC' })\n    .match(filter)\n    .range(rangeFrom, rangeTo)\n\n  // Inspired by: https://github.com/marmelab/ra-supabase/issues/19\n  if (q) {\n    const fullTextSearchFields = Array.isArray(resourceOptions) ? resourceOptions : resourceOptions.fullTextSearchFields\n\n    // Hackish multi search\n    // If there's commas in the search string, split on the commas, and require all terms to be present\n    let filters\n    if (q.includes(',')) {\n      filters = q.split(',')\n    } else {\n      filters = [q]\n    }\n\n    // Add an or clause (supabase dialect for where (x in z or y in w)) for each search term\n    let queryString = '' //create a query string to put into an or( ) selector\n    for (const filter of filters) {\n      fullTextSearchFields.forEach((field, index, array) => {\n        /* query = query.ilike(field, `%${q}%`); */ // existing method - add on successive ilike selectors\n\n        queryString += `${field}.ilike.%${filter}%` // new method - concatenate the ilike queries into one string\n\n        if (index < array.length - 1) {\n          queryString += ',' //add commas between the selectors, but not at the end\n        }\n      })\n      query.or(queryString) //add an or( ) selector using the built query string\n      queryString = ''\n    }\n  }\n\n  const { data, error, count } = await query\n\n  if (error) {\n    throw error\n  }\n  return {\n    data:\n      resourceOptions.primaryKey === 'id'\n        ? data\n        : data.map((item) => ({\n            ...item,\n            id: item[resourceOptions.primaryKey],\n          })) ?? [],\n    total: count ?? 0,\n  }\n}\n\nconst getResourceOptions = (resource, options) => {\n  const resourceOptions = options[resource]\n\n  if (Array.isArray(resourceOptions)) {\n    return {\n      table: resource,\n      primaryKey: 'id',\n      fields: resourceOptions,\n      fullTextSearchFields: resourceOptions,\n    }\n  }\n\n  return {\n    table: resourceOptions.table ?? resource,\n    primaryKey: resourceOptions.primaryKey ?? 'id',\n    fields: resourceOptions.fields,\n    fullTextSearchFields: resourceOptions.fullTextSearchFields ?? resourceOptions.fields,\n  }\n}\n\nconst resources = {\n  categories: ['id', 'name', 'created_at', 'updated_at'],\n  recipes: {\n    fullTextSearchFields: ['title', 'ingredients', 'season'],\n    fields: [\n      'id',\n      'title',\n      'ingredients',\n      'directions',\n      'rating',\n      'created_at',\n      'updated_at',\n      'servings',\n      'category_id',\n      'duration',\n      'duration_free',\n      'source',\n      'season',\n    ],\n  },\n}\n\nexport const dataProvider = supabaseDataProvider(supabase, resources)\n","import { createClient } from '@supabase/supabase-js'\n\nconst SUPABASE_URL = 'https://choglwwkknauoazmwevf.supabase.co'\n// This can be shared, it's basically a read only key since I have RLS enabled\nconst SUPABASE_ANON_KEY =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNob2dsd3dra25hdW9hem13ZXZmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NjA4NDg5MjksImV4cCI6MTk3NjQyNDkyOX0.xtw2s7bO_00-5cWzXJy8gsOF2XNZBxveS0FnNgAYX_A'\n\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY)\n","import danishMessages from 'ra-language-danish'\n\n// Add missing translations to the Danish standard\ndanishMessages.ra.navigation.page_rows_per_page = 'Rækker per side'\ndanishMessages.ra.navigation.skip_nav = 'Skip nav' // not sure what this is\ndanishMessages.ra.auth.user_menu = 'Profil'\n\nexport const danishMsgs = danishMessages\n\nexport const domainMessages = {\n  resources: {\n    recipes: {\n      name: 'Opskrift |||| Opskrifter',\n      fields: {\n        title: 'Titel',\n        rating: 'Bedømmelse',\n        servings: 'Antal personer',\n        category_id: 'Kategori',\n        duration_free: 'Tid',\n        ingredients: 'Ingredienser',\n        directions: 'Fremgangsmåde',\n        season: 'Sæson',\n        source: 'Kilde',\n      },\n    },\n    categories: {\n      name: 'Kategori |||| Kategorier',\n      fields: {\n        name: 'Navn',\n        created_at: 'Oprettet d.',\n        updated_at: 'Opdateret d.',\n      },\n    },\n  },\n  myroot: {\n    servings: 'personer',\n    search: 'Søg',\n  },\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  text: {\n    fontWeight: 'bold',\n    alignContent: 'center',\n    fontSize: '2rem',\n  },\n  root: {\n    'text-align': 'center',\n  },\n})\n\nconst RecipeShowTitle = (props) => {\n  const classes = useStyles()\n  const { record } = props\n  return (\n    <div className={classes.root}>\n      <span className={classes.text}>{record.title}</span>\n    </div>\n  )\n}\n\nexport default RecipeShowTitle\n","import React, { PureComponent } from 'react'\nimport { MAX_STARS } from '../constants/stars'\n\nclass Stars extends PureComponent {\n  render() {\n    const { rating } = this.props\n    let whiteStars = MAX_STARS\n    let blackStars = 0\n    if (rating) {\n      whiteStars = MAX_STARS - Number(rating)\n      blackStars = rating > MAX_STARS ? MAX_STARS : rating\n    }\n    if (whiteStars < 0) {\n      whiteStars = 0\n    }\n    return rating ? (\n      <span>\n        {[...Array(blackStars)].map((_x, index) => (\n          <span key={index}>★</span>\n        ))}\n        {[...Array(whiteStars)].map((_x, index) => (\n          <span key={index}>☆</span>\n        ))}\n      </span>\n    ) : (\n      ''\n    )\n  }\n}\n\nexport default Stars\n","export const MAX_STARS = 5\n","/* eslint-disable camelcase */\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useTranslate } from 'react-admin'\nimport Stars from '../stars'\n\nconst useStyles = makeStyles({\n  'text-left': {\n    float: 'left',\n    'text-align': 'left',\n    width: '33%',\n  },\n  'text-center': {\n    float: 'left',\n    'text-align': 'center',\n    width: '34%',\n  },\n  'text-right': {\n    float: 'left',\n    'text-align': 'right',\n    width: '33%',\n  },\n  root: {\n    paddingBlock: '3rem',\n  },\n})\n\nconst RecipeShowHeader = (props) => {\n  const translate = useTranslate()\n  const classes = useStyles()\n  const { record } = props\n  const { rating, servings, duration_free } = record\n  return (\n    <div className={classes.root}>\n      <span className={classes['text-left']}>\n        <Stars rating={rating} />\n      </span>\n      {servings && (\n        <span className={classes['text-center']}>\n          {servings} {translate('myroot.servings')}\n        </span>\n      )}\n      {duration_free && <span className={classes['text-right']}>{duration_free}</span>}\n    </div>\n  )\n}\n\nexport default RecipeShowHeader\n","import React from 'react'\nimport { RichTextField, useTranslate } from 'react-admin'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  label: {\n    fontWeight: 'bold',\n    fontSize: '1.25rem',\n    display: 'block',\n    marginBottom: '0.75rem',\n  },\n  root: {\n    paddingBlock: '1rem',\n  },\n})\n\nconst RecipeShowRichText = (props) => {\n  const translate = useTranslate()\n  const getLabel = (source) =>\n    source === 'ingredients'\n      ? translate('resources.recipes.fields.ingredients')\n      : translate('resources.recipes.fields.directions')\n  const classes = useStyles()\n  const { source } = props\n  return (\n    <div className={classes.root}>\n      <span className={classes.label}>{getLabel(source)}</span>\n      <RichTextField source {...props} />\n    </div>\n  )\n}\n\nexport default RecipeShowRichText\n","import React, { PureComponent } from 'react'\nimport Stars from './stars'\n\nclass StarRow extends PureComponent {\n  render() {\n    const { record } = this.props\n    const { rating } = record\n    return <Stars rating={rating} />\n  }\n}\n\nexport default StarRow\n","import React from 'react'\nimport {\n  minValue,\n  maxValue,\n  number,\n  ReferenceField,\n  Filter,\n  SelectInput,\n  ReferenceInput,\n  Show,\n  NumberInput,\n  SimpleShowLayout,\n  Create,\n  Edit,\n  TextInput,\n  SimpleForm,\n  NumberField,\n  List,\n  Datagrid,\n  TextField,\n  Pagination,\n  useTranslate,\n} from 'react-admin'\nimport RichTextInput from 'ra-input-rich-text'\nimport RecipeShowTitle from './recipeViews/recipeShowTitle'\nimport RecipeShowHeader from './recipeViews/recipeShowHeader'\nimport RecipeShowRichText from './recipeViews/recipeShowRichText'\nimport StarRow from './starRow'\n\nconst PostTitle = ({ record }) => {\n  return <span>{record ? `${record.title}` : ''}</span>\n}\nconst validateRating = [number(), minValue(1), maxValue(5)]\n\nconst RecipeFilter = (props) => {\n  const translate = useTranslate()\n  const searchLabel = translate('myroot.search')\n  return (\n    <Filter {...props}>\n      <TextInput label={searchLabel} source=\"q\" alwaysOn />\n      <ReferenceInput source=\"category_id\" reference=\"categories\" allowEmpty>\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n    </Filter>\n  )\n}\n\nconst PostPagination = (props) => <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />\n\nexport const RecipeList = (props) => (\n  <List {...props} filters={<RecipeFilter />} bulkActionButtons={false} perPage={100} pagination={<PostPagination />}>\n    <Datagrid rowClick=\"show\">\n      <TextField source=\"title\" />\n      <StarRow source=\"rating\" />\n      <NumberField source=\"servings\" />\n      <ReferenceField source=\"category_id\" reference=\"categories\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </Datagrid>\n  </List>\n)\n\nexport const RecipeShow = (props) => (\n  <Show {...props} title={<PostTitle />}>\n    <SimpleShowLayout>\n      <RecipeShowTitle source=\"title\" />\n      <RecipeShowHeader />\n      <RecipeShowRichText source=\"ingredients\" {...props} />\n      <RecipeShowRichText source=\"directions\" {...props} />\n      <TextField source=\"season\" />\n      <TextField source=\"source\" />\n    </SimpleShowLayout>\n  </Show>\n)\n\nconst toolbarOptions = [\n  ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n\n  [{ list: 'ordered' }, { list: 'bullet' }],\n  [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n  [{ direction: 'rtl' }], // text direction\n\n  [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n\n  [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n  [{ font: [] }],\n  [{ align: [] }],\n  ['clean'],\n]\n\nconst RecipeForm = () => (\n  <SimpleForm>\n    <TextInput source=\"title\" />\n    <NumberInput source=\"rating\" validate={validateRating} />\n    <NumberInput source=\"servings\" />\n    <TextInput source=\"duration_free\" />\n    <ReferenceInput source=\"category_id\" reference=\"categories\">\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>\n    <RichTextInput source=\"ingredients\" toolbar={toolbarOptions} />\n    <RichTextInput source=\"directions\" toolbar={toolbarOptions} />\n    <TextInput source=\"season\" />\n    <TextInput source=\"source\" />\n  </SimpleForm>\n)\n\nexport const RecipeEdit = (props) => (\n  <Edit {...props} title={<PostTitle />}>\n    {RecipeForm()}\n  </Edit>\n)\n\nexport const RecipeCreate = (props) => (\n  <Create {...props} title={<PostTitle />}>\n    {RecipeForm()}\n  </Create>\n)\n","import React from 'react'\nimport {\n  DateField,\n  Show,\n  SimpleShowLayout,\n  Create,\n  Edit,\n  TextInput,\n  SimpleForm,\n  List,\n  Datagrid,\n  TextField,\n} from 'react-admin'\n\nexport const CategoryCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" />\n    </SimpleForm>\n  </Create>\n)\n\nexport const CategoryList = (props) => (\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"name\" />\n    </Datagrid>\n  </List>\n)\n\nexport const CategoryEdit = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" />\n    </SimpleForm>\n  </Edit>\n)\n\nexport const CategoryShow = (props) => (\n  <Show {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"name\" />\n      <DateField source=\"created_at\" />\n      <DateField source=\"updated_at\" />\n    </SimpleShowLayout>\n  </Show>\n)\n","import { supabaseAuthProvider } from 'ra-supabase'\nimport { supabase } from './supabase'\n\nexport const authProvider = supabaseAuthProvider(supabase, {\n  // No identity to expose\n  getIdentity: async () => {\n    return {\n      fullName: '',\n    }\n  },\n})\n","import MenuBookIcon from '@material-ui/icons/MenuBook'\nimport CategoryIcon from '@material-ui/icons/Category'\nimport React, { Component } from 'react'\nimport { Admin, Resource } from 'react-admin'\nimport polyglotI18nProvider from 'ra-i18n-polyglot'\nimport { authRoutes, LoginPage } from 'ra-supabase'\nimport { dataProvider } from './dataProvider'\nimport { domainMessages, danishMsgs } from './i18n'\nimport { RecipeList, RecipeEdit, RecipeCreate, RecipeShow } from './components/recipes'\nimport { CategoryCreate, CategoryList, CategoryEdit, CategoryShow } from './components/categories'\nimport { authProvider } from './supabaseAuthProvider'\n\nconst messages = { ...danishMsgs, ...domainMessages }\nconst i18nProvider = polyglotI18nProvider(() => messages)\n\nclass App extends Component {\n  render() {\n    return (\n      <Admin\n        dataProvider={dataProvider}\n        authProvider={authProvider}\n        i18nProvider={i18nProvider}\n        customRoutes={authRoutes}\n        loginPage={LoginPage}\n      >\n        <Resource\n          name=\"recipes\"\n          show={RecipeShow}\n          list={RecipeList}\n          edit={RecipeEdit}\n          create={RecipeCreate}\n          icon={MenuBookIcon}\n        />\n        <Resource\n          name=\"categories\"\n          show={CategoryShow}\n          list={CategoryList}\n          edit={CategoryEdit}\n          create={CategoryCreate}\n          icon={CategoryIcon}\n        />\n      </Admin>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { BrowserRouter } from 'react-router-dom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}